{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","ref","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","values","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTwodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LA4CeA,MA1Cf,SAAkBC,GAChB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAO,MAqBxB,OAnBAC,qBAAU,WACRF,EAASG,QAAQC,WAmBjB,8BACE,uBAAMC,UAAU,YAAYC,SAbX,SAACC,GACpBA,EAAEC,iBAEFZ,EAAMU,SAAS,CACbG,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMf,IAGRC,EAAS,KAKP,UACE,uBACEe,KAAK,OACLC,YAAY,aACZC,MAAOlB,EACPmB,KAAK,OACLZ,UAAU,aACVa,SAxBa,SAACX,GACpBR,EAASQ,EAAEY,OAAOH,QAwBZI,IAAKpB,IAEP,wBAAQK,UAAU,cAAlB,4B,eCOOgB,MAxCf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAC/C,EAAwB5B,mBAAS,CAC/BY,GAAI,KACJO,MAAO,KAFT,mBAAOU,EAAP,KAAaC,EAAb,KAaA,OAAID,EAAKjB,GACA,cAAC,EAAD,CAAUiB,KAAMA,EAAMpB,SATV,SAACU,GACpBS,EAAWC,EAAKjB,GAAIO,GACpBW,EAAQ,CACNlB,GAAI,KACJmB,OAAQ,QAQLN,EAAMO,KAAI,SAACC,EAAMC,GAAP,OACf,sBACE1B,UAAWyB,EAAKE,WAAa,oBAAsB,WADrD,UAIE,qBAAmBC,QAAS,kBAAMV,EAAaO,EAAKrB,KAApD,SACGqB,EAAKjB,MADEiB,EAAKrB,IAGf,sBAAKJ,UAAU,QAAf,UACE,cAAC,IAAD,CACE4B,QAAS,kBAAMT,EAAWM,EAAKrB,KAC/BJ,UAAU,gBAEZ,cAAC,IAAD,CACE4B,QAAS,kBAAMN,EAAQ,CAAElB,GAAIqB,EAAKrB,GAAIO,MAAOc,EAAKjB,QAClDR,UAAU,qBAZT0B,OC+BIG,MArDf,WACE,MAA0BrC,mBAAS,IAAnC,mBAAOyB,EAAP,KAAca,EAAd,KAsCA,OACE,gCACE,4DACA,cAAC,EAAD,CAAU7B,SAvCE,SAACwB,GACf,GAAKA,EAAKjB,OAAQ,QAAQuB,KAAKN,EAAKjB,MAApC,CAIA,IAAMwB,EAAS,CAAIP,GAAJ,mBAAaR,IAE5Ba,EAASE,OAiCP,cAAC,EAAD,CACEf,MAAOA,EACPC,aAhBe,SAACd,GACpB,IAAI6B,EAAehB,EAAMO,KAAI,SAACC,GAI5B,OAHIA,EAAKrB,KAAOA,IACdqB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETK,EAASG,IAULd,WAvBa,SAACf,GAClB,IAAM8B,EAAY,YAAIjB,GAAOkB,QAAO,SAACV,GAAD,OAAUA,EAAKrB,KAAOA,KAE1D0B,EAASI,IAqBLd,WAlCa,SAACgB,EAAQC,GACrBA,EAAS7B,OAAQ,QAAQuB,KAAKM,EAAS7B,OAI5CsB,GAAS,SAACQ,GAAD,OACPA,EAAKd,KAAI,SAACe,GAAD,OAAWA,EAAKnC,KAAOgC,EAASC,EAAWE,eCZ3CC,MARf,WACE,OACE,qBAAKxC,UAAU,MAAf,SACE,cAAC,EAAD,OCFNyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.aeb1547c.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState('');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input,\r\n    });\r\n\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className='todo-form' onSubmit={handleSubmit}>\r\n        <input\r\n          type='text'\r\n          placeholder='Add a todo'\r\n          value={input}\r\n          name='text'\r\n          className='todo-input'\r\n          onChange={handleChange}\r\n          ref={inputRef}\r\n        />\r\n        <button className='todo-button'>Add todo</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: '',\r\n  });\r\n\r\n  const submitUpdate = (value) => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      values: '',\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n      key={index}\r\n    >\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n      <div className='icons'>\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className='delete-icon'\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className='delete-icon'\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTwodos = [todo, ...todos];\r\n\r\n    setTodos(newTwodos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos((prev) =>\r\n      prev.map((item) => (item.id === todoId ? newValue : item))\r\n    );\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    const removeArr = [...todos].filter((todo) => todo.id !== id);\r\n\r\n    setTodos(removeArr);\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>What's the Plan for Today?</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}